openapi: 3.0.3
info:
  description: "Backend for student project [REDI Run](https://github.com/redi-js-teachers/js_sprint_2020_final_project_khomtali)."
  version: 0.0.4
  title: REDI Run Backend
  contact:
    name: Travis Shears
    email: redirun@travisshears.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
- url: https://redi.travisshears.xyz/api/run/v1
  description: production server running in stabil k8s cluster
tags:
- name: "user"

paths:
  /user:
    get:
      tags:
      - user
      security: 
      - user_auth:
        - write:user
      summary: "get new or existing user"
      description: Gets an existing user or creates a new one and returnes it with all of its properties. The user id is extracted from the auth token so no parameters needed. 
      responses:
        '200':
          description: new or existing user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
    patch:
      tags:
      - user
      security: 
      - user_auth:
        - write:user
      summary: "update fields on a user"
      description: preforms updates on a user and returs a status
      requestBody:
        description: "fields to update and their values. can be one or more fields along with the id"
        content: 
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "auth0|5ed93941a11c7f001a157fb9"
                  description: auth0 id of the user
                fields:
                  $ref: '#/components/schemas/user_fields'
      responses:
        '200':
          description: changes applied
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                
              
  /client-info:
    get:
      description: Settings for auth0 client side intergration
      summary: auth0 settings
      responses:
        '200':
          description: copy of the settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  audience:
                    type: string
                  client_id:
                    type: string
                  domain:
                    type: string


components:
  schemas:
    user:
      type: object
      required:
      - auth0_id
      properties:
        auth0_id:
          type: string
        age:
          type: integer
          format: int32
          minimum: 0
        resting_heart_rate:
          type: integer
          format: int32
          minimum: 0
        name:
          type: string
        nickname:
          type: string
    user_fields:
      type: object
      properties:
        age:
          type: integer
          format: int32
          minimum: 0
        resting_heart_rate:
          type: integer
          format: int32
          minimum: 0
          

  securitySchemes:
    user_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
